 src/opusdec.c        | 24 +++++++++++++++++++++---
 src/opusenc.c        | 17 +++++++----------
 win32/genversion.bat | 15 ---------------
 win32/version.h      |  2 +-
 4 files changed, 29 insertions(+), 29 deletions(-)

diff --git a/src/opusdec.c b/src/opusdec.c
index b23ae62..bfb2b68 100644
--- a/src/opusdec.c
+++ b/src/opusdec.c
@@ -57,6 +57,7 @@
 # include <io.h>
 # include <fcntl.h>
 # define I64FORMAT "I64d"
+# define ftello64(_x) _ftelli64((_x))
 #else
 # define I64FORMAT "lld"
 # define fopen_utf8(_x,_y) fopen((_x),(_y))
@@ -658,6 +659,7 @@ int main(int argc, char **argv)
       {"force-wav", no_argument, NULL, 0},
       {"packet-loss", required_argument, NULL, 0},
       {"save-range", required_argument, NULL, 0},
+      {"no-resample", no_argument, NULL, 0},
       {0, 0, 0, 0}
    };
    ogg_sync_state oy;
@@ -667,6 +669,7 @@ int main(int argc, char **argv)
    int close_in=0;
    int eos=0;
    ogg_int64_t audio_size=0;
+   ogg_int64_t input_size=0;
    double last_coded_seconds=0;
    float loss_percent=-1;
    float manual_gain=0;
@@ -682,6 +685,7 @@ int main(int argc, char **argv)
    int dither=1;
    shapestate shapemem;
    SpeexResamplerState *resampler=NULL;
+   int no_resample = 0;
    float gain=1;
    int streams=0;
    size_t last_spin=0;
@@ -743,7 +747,10 @@ int main(int argc, char **argv)
             forcewav=1;
          } else if (strcmp(long_options[option_index].name,"rate")==0)
          {
-            rate=atoi (optarg);
+            rate=((no_resample) ? 48000 : atoi(optarg));
+         } else if (strcmp(long_options[option_index].name,"no-resample")==0)
+         {
+            no_resample=1; rate=48000;
          } else if (strcmp(long_options[option_index].name,"gain")==0)
          {
             manual_gain=atof (optarg);
@@ -825,6 +832,16 @@ int main(int argc, char **argv)
       close_in=1;
    }
 
+   /*detect input size*/
+   if(fin != stdin)
+   {
+      struct _stat64 info;
+      if(_fstati64(_fileno(fin), &info) == 0)
+      {
+        input_size = info.st_size;
+      }
+   }
+
    /* .opus files use the Ogg container to provide framing and timekeeping.
     * http://tools.ietf.org/html/draft-terriberry-oggopus
     * The easiest way to decode the Ogg container is to use libogg, so
@@ -989,10 +1006,11 @@ int main(int argc, char **argv)
                   /*Display a progress spinner while decoding.*/
                   static const char spinner[]="|/-\\";
                   double coded_seconds = (double)audio_size/(channels*rate*sizeof(short));
+                  double percent = (input_size>0) ? ((double)ftello64(fin))/((double)input_size) : 0.0;
                   if(coded_seconds>=last_coded_seconds+1){
-                     fprintf(stderr,"\r[%c] %02d:%02d:%02d", spinner[last_spin&3],
+                     fprintf(stderr,"\r[%c] %02d:%02d:%02d (%.f%%)", spinner[last_spin&3],
                              (int)(coded_seconds/3600),(int)(coded_seconds/60)%60,
-                             (int)(coded_seconds)%60);
+                             (int)(coded_seconds)%60,percent*100.0);
                      fflush(stderr);
                      last_spin++;
                      last_coded_seconds=coded_seconds;
diff --git a/src/opusenc.c b/src/opusenc.c
index b24f7c7..147bc07 100644
--- a/src/opusenc.c
+++ b/src/opusenc.c
@@ -968,6 +968,7 @@ int main(int argc, char **argv)
         double estbitrate;
         double coded_seconds=nb_encoded/(double)coding_rate;
         double wall_time=(stop_time-start_time)+1e-6;
+        double percent = 0.0;
         char sbuf[55];
         static const char spinner[]="|/-\\";
         if(!with_hard_cbr){
@@ -975,20 +976,16 @@ int main(int argc, char **argv)
           estbitrate=(total_bytes*8.0/coded_seconds)*tweight+
                       bitrate*(1.-tweight);
         }else estbitrate=nbBytes*8*((double)coding_rate/frame_size);
+        if(inopt.total_samples_per_channel>0){
+          percent = ((double)nb_encoded) / ((double)inopt.total_samples_per_channel);
+        }
         fprintf(stderr,"\r");
         for(i=0;i<last_spin_len;i++)fprintf(stderr," ");
-        if(inopt.total_samples_per_channel>0 && inopt.total_samples_per_channel<nb_encoded){
-          snprintf(sbuf,54,"\r[%c] %02d%% ",spinner[last_spin&3],
-          (int)floor(nb_encoded/(double)(inopt.total_samples_per_channel+inopt.skip)*100.));
-        }else{
-          snprintf(sbuf,54,"\r[%c] ",spinner[last_spin&3]);
-        }
-        last_spin_len=strlen(sbuf);
-        snprintf(sbuf+last_spin_len,54-last_spin_len,
-          "%02d:%02d:%02d.%02d %4.3gx realtime, %5.4gkbit/s",
+        snprintf(sbuf,54,"\r[%c] %02d:%02d:%02d.%02d (%.f%%) %4.3gx realtime, %5.4gkbit/s",
+          spinner[last_spin&3],
           (int)(coded_seconds/3600),(int)(coded_seconds/60)%60,
           (int)(coded_seconds)%60,(int)(coded_seconds*100)%100,
-          coded_seconds/wall_time,
+          percent*100.0,coded_seconds/wall_time,
           estbitrate/1000.);
         fprintf(stderr,"%s",sbuf);
         fflush(stderr);
diff --git a/win32/genversion.bat b/win32/genversion.bat
index 9bc6917..5388813 100644
--- a/win32/genversion.bat
+++ b/win32/genversion.bat
@@ -1,17 +1,2 @@
 @echo off
 
-for /f %%v in ('git describe --tags --match "v*"') do set version=%%v
-
-set version_out=#define %2 "%version%"
-
-echo %version_out% > %1_temp
-
-echo n | comp %1_temp %1 > NUL 2> NUL
-
-if not errorlevel 1 goto exit
-
-copy /y %1_temp %1
-
-:exit
-
-del %1_temp
diff --git a/win32/version.h b/win32/version.h
index 72d7eb6..71cbcf6 100644
--- a/win32/version.h
+++ b/win32/version.h
@@ -1 +1 @@
-#define VERSION "v0.1.6git"
+#define VERSION "v0.1.6 [2013-03-12]"
