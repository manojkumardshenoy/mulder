 src/opusdec.c |   17 +++++++++++++++--
 src/opusenc.c |    8 ++++++--
 2 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/src/opusdec.c b/src/opusdec.c
index 5c35242..da23c97 100644
--- a/src/opusdec.c
+++ b/src/opusdec.c
@@ -57,6 +57,7 @@
 # include <io.h>
 # include <fcntl.h>
 # define I64FORMAT "I64d"
+# define ftello64(_x) _ftelli64((_x))
 #else
 # define I64FORMAT "lld"
 # define fopen_utf8(_x,_y) fopen((_x),(_y))
@@ -645,6 +646,7 @@ int main(int argc, char **argv)
    int close_in=0;
    int eos=0;
    ogg_int64_t audio_size=0;
+   ogg_int64_t input_size=0;
    double last_coded_seconds=0;
    float loss_percent=-1;
    float manual_gain=0;
@@ -789,6 +791,16 @@ int main(int argc, char **argv)
       close_in=1;
    }
 
+   /*detect input size*/
+   if(fin != stdin)
+   {
+      struct _stat64 info;
+      if(_fstati64(_fileno(fin), &info) == 0)
+      {
+        input_size = info.st_size;
+      }
+   }
+
    /*Init Ogg data struct*/
    ogg_sync_init(&oy);
 
@@ -911,10 +923,11 @@ int main(int argc, char **argv)
                if(!quiet){
                   static const char spinner[]="|/-\\";
                   double coded_seconds = (double)audio_size/(channels*rate*sizeof(short));
+                  double percent = (input_size>0) ? ((double)ftello64(fin))/((double)input_size) : 0.0;
                   if(coded_seconds>=last_coded_seconds+1){
-                     fprintf(stderr,"\r[%c] %02d:%02d:%02d", spinner[last_spin&3],
+                     fprintf(stderr,"\r[%c] %02d:%02d:%02d (%.f%%)", spinner[last_spin&3],
                              (int)(coded_seconds/3600),(int)(coded_seconds/60)%60,
-                             (int)(coded_seconds)%60);
+                             (int)(coded_seconds)%60,percent*100.0);
                      fflush(stderr);
                      last_spin++;
                      last_coded_seconds=coded_seconds;
diff --git a/src/opusenc.c b/src/opusenc.c
index f6cc762..a34b340 100644
--- a/src/opusenc.c
+++ b/src/opusenc.c
@@ -895,6 +895,7 @@ int main(int argc, char **argv)
         double estbitrate;
         double coded_seconds=nb_encoded/(double)coding_rate;
         double wall_time=(stop_time-start_time)+1e-6;
+        double percent = 0.0;
         char sbuf[55];
         static const char spinner[]="|/-\\";
         if(!with_hard_cbr){
@@ -909,12 +910,15 @@ int main(int argc, char **argv)
         }else{
           snprintf(sbuf,54,"\r[%c] ",spinner[last_spin&3]);
         }
+        if(inopt.total_samples_per_channel>0){
+          percent = ((double)nb_encoded) / ((double)inopt.total_samples_per_channel);
+        }
         last_spin_len=strlen(sbuf);
         snprintf(sbuf+last_spin_len,54-last_spin_len,
-          "%02d:%02d:%02d.%02d %4.3gx realtime, %5.4gkbit/s\r",
+          "%02d:%02d:%02d.%02d (%.f%%) %4.3gx realtime, %5.4gkbit/s\r",
           (int)(coded_seconds/3600),(int)(coded_seconds/60)%60,
           (int)(coded_seconds)%60,(int)(coded_seconds*100)%100,
-          coded_seconds/wall_time,
+          percent*100.0,coded_seconds/wall_time,
           estbitrate/1000.);
         fprintf(stderr,"%s",sbuf);
         fflush(stderr);
